---
import type { MarkdownHeading } from "astro"
import { Icon } from "astro-icon/components"

import Link from "@/components/Link.astro"

interface Props {
  headings: MarkdownHeading[]
}

const { headings } = Astro.props

const indentClass: Record<number, string> = {
  1: "ml-0",
  2: "ml-0",
  3: "ml-4",
  4: "ml-8",
  5: "ml-12",
  6: "ml-16",
}
---

<nav class="sticky top-24">
  <Link
    href="#title"
    title="Table of Contents"
    class="flex items-center justify-between"
    titleClass="text-xl font-semibold"
  >
    <Icon name="tabler:chevron-up" class="size-5 opacity-50" />
  </Link>

  <ol class="mt-4 ml-0 space-y-2">
    {
      headings.map((heading) => (
        <li
          class:list={[indentClass[heading.depth], "border-l-2 border-base-300 pl-4 transition-colors"]}
          data-heading-id={heading.slug}
        >
          <Link href={`#${heading.slug}`} title={heading.text} />
        </li>
      ))
    }
  </ol>
</nav>

<script>
  const observer = new IntersectionObserver((entries) => {
    for (const entry of entries) {
      const heading = entry.target.querySelector("h1[id], h2[id], h3[id], h4[id], h5[id], h6[id]")
      const id = heading?.getAttribute("id")
      const tocItem = document.querySelector(`nav li[data-heading-id="${id}"]`)

      if (entry.intersectionRatio > 0) {
        tocItem?.classList.remove("border-base-300")
        tocItem?.classList.add("border-secondary")
      } else {
        tocItem?.classList.remove("border-secondary")
        tocItem?.classList.add("border-base-300")
      }
    }
  })

  for (const section of document.querySelectorAll("section.heading")) {
    observer.observe(section)
  }
</script>
