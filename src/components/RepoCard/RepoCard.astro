---
import { Icon } from "astro-icon/components"

import Link from "~/components/Link.astro"
import { getLanguageColors, getRepoData } from "~/components/RepoCard/utils.ts"

interface Props {
  repo: string
}

const { repo } = Astro.props

const repoData = await getRepoData(repo)
const languageColors = await getLanguageColors()
---

<div class="flex flex-col justify-between space-y-3 rounded-md border border-base-300 bg-base-200 p-4">
  <hgroup class="flex flex-col space-y-2">
    <header class="flex items-center space-x-2">
      <Icon name="tabler:brand-github" class="size-5 flex-shrink-0 opacity-75" />
      <Link class="text-secondary" href={repoData.html_url}>{repoData.name}</Link>
    </header>
    {repoData.description ? <p class="text-sm">{repoData.description}</p> : undefined}
  </hgroup>

  <aside class="flex flex-wrap items-center space-x-4">
    <div class="flex items-center space-x-1">
      <div
        class="size-3 rounded-full"
        style={`background-color: ${languageColors[repoData.language]?.color ?? "transparent"};`}
      >
      </div>
      <span class="text-sm">{repoData.language}</span>
    </div>

    <div class="flex items-center space-x-4">
      {
        repoData.stargazers_count ? (
          <div class="flex items-center space-x-1">
            <Icon name="tabler:star" class="size-4 opacity-75" />
            <span class="text-sm">{repoData.stargazers_count}</span>
          </div>
        ) : undefined
      }
      {
        repoData.forks ? (
          <div class="flex items-center space-x-1">
            <Icon name="tabler:git-fork" class="size-4 opacity-75" />
            <span class="text-sm">{repoData.forks}</span>
          </div>
        ) : undefined
      }
    </div>
  </aside>
</div>
